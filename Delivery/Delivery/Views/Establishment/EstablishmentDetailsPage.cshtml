@model Delivery.ViewModels.EstablishmentDeteilsViewModel

@{
    ViewBag.Title = Model.Name; 
}

<div class="container">
    <div class="text-center mb-4">
        <img src="@Model.Image" alt="Фото заведения" class="img-fluid cafe-image">
        <div class="description-box text-center">
            <h4 class="mb-3" style="word-wrap: break-word;">@Model.Name</h4>
            <p class="mt-2" style="word-wrap: break-word;">@Model.Description</p>
        </div>
    </div>

    @if (User.IsInRole("admin"))
    {
        <div class="text-center mt-4 mb-3" style="display: flex; justify-content: center; gap: 10px;">
            <a asp-action="CreateDish" asp-route-establishmentId="@Model.Id" class="btn btn-outline-success mr-1">Добавить блюдо</a>
            <form asp-action="EditEstablishment" asp-controller="Establishment" method="get" asp-route-id="@Model.Id">
                <button type="submit" class="btn btn-dark ">Редактировать заведение</button>
            </form>
            <form asp-action="DeleteEstablishment" asp-controller="Establishment" method="post">
                <input type="hidden" name="id" value="@Model.Id"/>
                <button type="submit" class="btn btn-danger">Удалить заведение</button>
            </form>
        </div>
    }

    <div class="d-flex">
        <div class="flex-grow-1">
            <h3 class="mb-3 text-center">Меню</h3>

            @if (Model.Dishes != null && Model.Dishes.Count > 0)
            {
            <div class="row">
                @foreach (var dish in Model.Dishes)
                {
                    <div class="col-sm-3 mb-3 d-flex">
                        <div class="card1 shadow position-relative">
                            <img src="@dish.Image" alt="Фото блюда" style="height: 150px;">
                            <div class="card-body text-start text-wrap text-break">
                                <p class="card-text">@dish.Name</p>
                                <p class="card-text">Описание: <em class="not-bold text-break">@dish.Description</em></p>
                                <p class="card-text">@dish.Price сом</p>
                                <div class="d-flex justify-content-end position-absolute bottom-0 end-0 m-2" style="width: 100%;">
                                    
                                    @if (User.IsInRole("admin") || User.IsInRole("user"))
                                    {
                                        <button class="btn btn-success btn-sm add-to-basket me-2"
                                                data-dish-id="@dish.Id"
                                                data-establishment-id="@Model.Id">
                                            <i class="fa-solid fa-cart-plus"></i>
                                        </button>
                                    } 
                                    @if (User .IsInRole("admin"))
                                    {
                                        <a asp-action="EditDish" asp-route-dishId="@dish.Id" class="btn btn-secondary btn-sm"><i class="fa-solid fa-pen-to-square"></i></a>
                                        <form asp-action="DeleteDish" asp-controller="Establishment" method="post" class="d-inline ms-2 me-2">
                                            <input type="hidden" name="dishId" value="@dish.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash-can"></i></button>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
             </div>
            }
            else
            {
                <h4 class="text-center">Меню временно недоступно</h4>
            }
        </div>


        @if (Model.Basket != null && Model.Basket.BasketDishes.Count > 0)
        {
            <div id="basketContainer" class="ms-4" style="width: 300px;">
                <h3 class="mb-3 text-center">Ваша корзина</h3>
                <div class="card shadow-sm">
                    <ul class="list-group list-group-flush">
                        @foreach (var basketDish in Model.Basket.BasketDishes)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="dish-text">
                                    <strong>@basketDish.Dish.Name</strong> - @basketDish.Quantity x @basketDish.Dish.Price сом
                                </div> <br/>
                                <button class="btn btn-danger btn-sm remove-from-basket"
                                        data-dish-id="@basketDish.DishId"
                                        data-establishment-id="@Model.Id">
                                    <i class="fa-solid fa-trash-can"></i> 
                                </button>
                            </li>
                        }
                    </ul>
                    <div class="card-body">
                        <strong>Общая стоимость:</strong> @Model.Basket.BasketDishes.Sum(bd => bd.Dish.Price * bd.Quantity) сом
                    </div>
                </div>
            </div>
        }
    
    </div>
</div>

@section Scripts 
{
    <script>
        $(document).ready(function () {
            $('.add-to-basket').click(function () {
                var dishId = $(this).data('dish-id');
                var establishmentId = $(this).data('establishment-id');

                console.log("Adding to basket: ", { dishId, establishmentId });
                $.ajax({
                    type: 'POST',
                    url: "/Establishment/AddToBasket/",
                    data: { dishId: dishId, establishmentId: establishmentId },
                    success: function (response) {
                        console.log("Response from AddToBasket:", response);
                        location.reload(); 
                    },
                    error: function (err) {
                        console.log("Error adding to basket:", err);
                        
                    }
                });
            });
            $(document).on('click', '.remove-from-basket', function () {
                var dishId = $(this).data('dish-id');
                var establishmentId = $(this).data('establishment-id');

                console.log("Removing from basket: ", { dishId, establishmentId });
                $.ajax({
                    type: 'POST',
                    url: '/Establishment/RemoveFromBasket/',
                    data: { dishId: dishId, establishmentId: establishmentId },
                    success: function (response) {
                        console.log("Response from RemoveFromBasket:", response);
                        location.reload();
                    },
                    error: function (err) {
                        console.log("Error removing from basket:", err);
                    }
                });
            });
        });
    </script>
}
